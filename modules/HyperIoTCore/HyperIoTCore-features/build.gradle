/**
 * This plugin installs all required modules for having a fresh installation of hyperiot microservices
 */

apply plugin: 'com.github.lburgazzoli.karaf'

jar.enabled = false

configurations {
	core {
		transitive = false
	}

}

dependencies {

}


karaf {
    features {
        // See section below for karaf 4 support if using 1.3.0
        xsdVersion  = '1.2.0'
        version     = '4.0.0' // Your project version
        description = 'Karaf features'

        // Include the current project, false by default
        includeProject = false

        // Add in extra repositories to the features xml file
        //Example:
        repository "mvn:it.acsoftware.hyperiot.base/HyperIoTBase-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.mail/HyperIoTMail-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.permission/HyperIoTPermission-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.huser/HyperIoTHUser-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.company/HyperIoTCompany-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.role/HyperIoTRole-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.authentication/HyperIoTAuthentication-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.asset.category/HyperIoTAssetCategory-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.asset.tag/HyperIoTAssetTag-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.zookeeper.connector/HyperIoTZookeeperConnector-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.shared.entity/HyperIoTSharedEntity-features/"+project.version+"/xml/features"
        repository "mvn:it.acsoftware.hyperiot.jobscheduler/HyperIoTJobScheduler-features/"+project.version+"/xml/features"

        //Core without rest services
        feature {
            name        = 'hyperiot-core-basic'
            description = 'All  HyperIoT HyperIoTCore modules'
            feature 'hyperiot-base-basic'
            feature 'hyperiot-mail-basic'
            feature 'hyperiot-authentication-basic'
            feature 'hyperiot-permission-basic'
            feature 'hyperiot-huser-basic'
            feature 'hyperiot-company-basic'
            feature 'hyperiot-role-basic'
            feature 'hyperiot-assetcategory-basic'
            feature 'hyperiot-assettag-basic'
            feature 'hyperiot-sharedentity-basic'
            configurations 'core'
        }

        //Core without rest services with zookeeper integration
        feature {
            name        = 'hyperiot-core-basic-clustered'
            description = 'All  HyperIoT HyperIoTCore modules'
            feature 'hyperiot-core-basic'
            feature 'hyperiot-zookeeperconnector'
            configurations 'core'
        }

        //Core with rest services
        feature {
            name        = 'hyperiot-core'
            description = 'All  HyperIoT HyperIoTCore modules'
            feature 'hyperiot-base'
            feature 'hyperiot-mail'
            feature 'hyperiot-authentication'
            feature 'hyperiot-permission'
            feature 'hyperiot-huser'
            feature 'hyperiot-company'
            feature 'hyperiot-role'
            feature 'hyperiot-assetcategory'
            feature 'hyperiot-assettag'
            feature 'hyperiot-sharedentity'
            configurations 'core'
        }

        //Core with rest services and zookeeper integration
        feature {
            name        = 'hyperiot-core-clustered'
            description = 'All  HyperIoT HyperIoTCore modules'
            feature 'hyperiot-core'
            feature 'hyperiot-zookeeperconnector'
            configurations 'core'
        }

    }

    // Enable generation of Karaf Archive KAR based on features defined above.
    // To generate kar either use generateKar, assemble or install
    kar {
        // Optionally set the kar name, default is:
        //
        //     ${features.name}-${features.version}.kar
        //
        // Extension is automatically set to .kar
        archiveName = 'HyperIoTCore'
    }
}


task buildHIT(type: GradleBuild) {

}

task buildFeatures(type: GradleBuild) {
	tasks = [ 'clean','generateFeatures','build','install' ]
}

task publishHIT(type: GradleBuild) {

}

task publishFeatures(type: GradleBuild) {
	tasks = [ 'clean','generateFeatures','build','install','publish' ]
}

def featureFile = 'build/karaf/features/'+project.name+'-'+project.version+'.xml'
publishing {
    publications {
        hyperiot(MavenPublication) {
            artifactId project.name
            artifact source: featureFile, classifier: 'features'
        }
    }
 }
